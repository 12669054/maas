---
- name: Install Prerequisites
  become: yes
  apt: name={{ item }} state=latest
  with_items:
    - git
    - bridge-utils
    - curl
    - python-pycurl
    - python-pip
    - ethtool

- name: Install Python Prerequisites
  become: yes
  pip: name={{ item }} state=latest
  with_items:
    - docker-py

- name: Stop MAAS Automation Container
  become: yes
  docker:
    name: automation
    image: ciena/cord-maas-automation:0.1-prerelease
    state: absent

- name: Stop DHCP Harvester Container
  become: yes
  docker:
    name: harvester
    image: ciena/cord-maas-dhcp-harvester:0.1-prerelease
    state: absent

- name: MAAS Repository
  become: yes
  apt_repository:
    repo: ppa:maas/stable
    update_cache: yes
    state: present

- name: MAAS
  become: yes
  apt:
    name: maas
    state: latest

- name: MAAS Configuration Directory
  become: yes
  file:
    path: /etc/maas
    owner: maas
    group: maas
    mode: 0755
    state: directory

- name: Host Name Mapping File
  become: yes
  copy:
    src: files/mappings.json
    dest: /etc/maas/mappings.json
    owner: maas
    group: maas
    mode: 0644

- name: Verify MAAS admin User
  become: yes
  shell: maas-region-admin apikey --username=admin 2>/dev/null | wc -l
  register: maas_admin_user_exists
  changed_when: false

- name: MAAS admin User
  become: yes
  command: maas-region-admin createadmin --username=admin --password=admin --email={{ maas.admin_email }}
  when: maas_admin_user_exists.stdout == '0'

- name: Verify MAAS User
  become: yes
  shell: maas-region-admin apikey --username={{ maas.user }} 2>/dev/null | wc -l
  register: maas_user_exists
  changed_when: false

- name: MAAS User
  become: yes
  command: maas-region-admin createadmin --username={{ maas.user }} --password={{ maas.user_password }} --email={{ maas.user_email }}
  when: maas_user_exists.stdout == '0'

- name: MAAS User API Key
  become: yes
  command: maas-region-admin apikey --username={{ maas.user }}
  register: apikey
  changed_when: false

- name: Verify Default Virsh Network
  shell: virsh net-list | grep default | wc -l
  register: virsh_default_network_exists
  changed_when: false

- name: Default Virsh Network Absent
  become: yes
  command: virsh net-destroy default
  when: virsh_default_network_exists.stdout != '0'

- name: Network Configuration
  become: yes
  script: files/generate_network_config.sh {{ interfaces.management }} {{ networks.management }} {{ networks.bridge }} {{ networks.bridge_name }}
  register: network_config_changed
  changed_when: network_config_changed.stdout == 'true'

- name: Network Masquerading (NAT)
  become: yes
  template:
    src: templates/nat.j2
    dest: /etc/network/if-pre-up.d/nat
    owner: root
    group: root
    mode: 0755

- name: Activate Masquerading (NAT)
  become: yes
  command: /etc/network/if-pre-up.d/nat report-changed
  register: masq_changed
  changed_when: masq_changed.stdout == 'true'

- name: VM Bridge
  become: yes
  template:
    src: templates/create_bridge.j2
    dest: /etc/network/if-pre-up.d/create_bridge_{{ networks.bridge_name }}
    owner: root
    group: root
    mode: 0755

- name: Activate VM Bridge
  become: yes
  command: /etc/network/if-pre-up.d/create_bridge_{{ networks.bridge_name }} report-changed
  register: bridge_changed
  changed_when: bridge_changed.stdout == 'true'

- name: Management Interface
  become: yes
  shell: ifdown {{ interfaces.management }} && ifup {{ interfaces.management }}
  when: network_config_changed.stdout == 'true'

- name: Management Interface IP Address
  shell: ifconfig {{ interfaces.management }} 2>&1 | grep "inet addr:" | sed -e 's/.*:\([.0-9]*\)[ ]*Bcast.*/\1/g'
  register: mgmt_ip_address
  changed_when: false

# Currently the onie image is being stored in **Dropbox** on a personal account, which is not really what we want to
# have in production, but it works for the time being.
- name: Switch Boot Resources
  become: yes
  get_url:
    url={{ item.url }}
    dest=/var/www/html/{{ item.dest }}
    owner=root
    group=root
    mode=0644
  with_items:
    - { url : "https://www.dropbox.com/s/eqxs4kx84omtkha/onie-installer-x86_64-accton_as6712_32x-r0?dl=1", dest : "onie-installer-x86_64-accton_as6712_32x-r0" }
    - { url : "https://www.dropbox.com/s/eqxs4kx84omtkha/onie-installer-x86_64-accton_as6712_32x-r0?dl=1", dest : "onie-installer-x86_64-accton_as5712_54x-r0" }
  tags:
    - switch_support

- name: Wait for MAAS to Intialize (start)
  pause:
    seconds=30
  changed_when: false

- name: Configure MAAS
  become: yes
  command: docker run ciena/cord-maas-bootstrap:0.1-prerelease --apikey='{{apikey.stdout}}' --sshkey='{{maas.user_sshkey}}' --url='http://{{mgmt_ip_address.stdout}}/MAAS/api/1.0' --network='{{networks.management}}' --interface='{{interfaces.management}}' --zone='administrative' --cluster='Cluster master' --domain='{{maas.domain}}' --bridge='{{networks.bridge_name}}' --bridge-subnet='{{networks.bridge}}'
  register: maas_config_result
  changed_when: maas_config_result.stdout.find("CHANGED") != -1
  failed_when: "'ERROR' in maas_config_result.stdout"

- name: Custom MAAS Configuration Template
  become: yes
  copy:
    src: files/{{ item.src }}
    dest: "{{ item.dest }}"
    owner: maas
    group: maas
    mode: 0644
  with_items:
    - { src: 'dhcpd.blacklist', dest: '/etc/dhcp' }
    - { src: 'dhcpd.reservations', dest: '/etc/dhcp' }
    - { src: 'dhcp_harvest.inc', dest: '/etc/bind/maas' }
    - { src: 'named.conf.options.inside.maas', dest: '/etc/bind/maas' }
    - { src: 'dhcpd.conf.template', dest: '/etc/maas/templates/dhcp' }
    - { src: 'dhcp_harvest.inc', dest: '/etc/maas/templates/dns' }
    - { src: 'zone.template', dest: '/tmp' }

- name: Custom DNS Zone Template
  become: yes
  script: files/update_dns_template.sh {{ networks.management }} {{ maas.domain }}
  register: dns_template_changed
  changed_when: dns_template_changed.stdout == 'true'

- name: Ensure Nameserver
  become: yes
  lineinfile:
    dest: /etc/resolvconf/resolv.conf.d/head
    state: present
    insertafter: EOF
    line: "nameserver {{ mgmt_ip_address.stdout }}" 
  register: ns_nameserver

- name: Ensure Domain Search
  become: yes
  lineinfile:
    dest: /etc/resolvconf/resolv.conf.d/base
    state: present
    insertafter: EOF
    line: 'search cord.lab'
  register: ns_search

- name: Ensure DNS
  become: yes
  command: resolvconf -u
  when: ns_nameserver.changed or ns_search.changed

- name: Ensure VirtualBox Power Management
  include: virtualbox.yml
  when: virtualbox_support is defined

- name: Custom Automation Compose Configurations
  become: yes
  template:
    src: templates/{{ item }}.j2
    dest: /etc/maas/{{ item }}
    owner: maas
    group: maas
    mode: 0644
  with_items:
    - automation-compose.yml
    - harvest-compose.yml

- name: Automation
  become: yes
  command: docker-compose -f /etc/maas/{{ item }} up -d
  with_items:
    - automation-compose.yml
    - harvest-compose.yml
